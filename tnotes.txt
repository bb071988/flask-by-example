update the Heroku toolbelt
wget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh

Commit your changes in git and optionally PUSH to Github, then create two new Heroku apps.

One for production:

$ heroku create wordcounts-pro
And one for staging:

$ heroku create wordcounts-stage
Add your new apps to your it remotes. Make sure to name one remote pro (for “production”) and the other stage (for “staging”):


Create the heroku

heroku create wordcounts-pro

Add app as a git remote
git remote add pro git@heroku.com:YOUR_APP_NAME.git

push to git
....

push to heroku
git push stage master

must add each app to a dyno as follows
heroku ps:scale web=1 --app bbwordcounts-dev

heroku command line to see logs
 $ heroku ps:scale web=1 --app bbwordcounts-dev
 
 stopped here
 

 Now we have the same functionality live on our production site.
 
 Generate a good flask secret key
 >>> import os
>>> os.urandom(24)
'\x91\xb4\x8en\x86T-\xea\x9e\xa4|\xbc\xae\x14\x85\x14\x87\x12\xd5\x16\xb2\xc7w\xc4'  #mysecret key

Modify postactivate to add env variables

export APP_SETTINGS="config.DevelopmentConfig"


set up env settings on heroku
heroku config:set APP_SETTINGS=config.StagingConfig --remote stage

postactivate location - /home/ubuntu/.virtualenvs/wordcounts/bin/postactivate

STOPPED HERE 

What we’re doing here is creating a table to store the results of our word counts. 
We first import the database connection that we created in our app.py file as well as JSON from SQLAlchemy’s PostgreSQL dialects. 


MUST ADD USER UBUNTU TO THE WORDCOUNT-DEV DB WE CREATED
ALTER USER ubuntu WITH PASSWORD 'Gatsby';